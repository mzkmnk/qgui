/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /**
     * @description PTYプロセスの実行状態
     * @enum {string}
     */
    ProcessState: 'idle' | 'running' | 'error' | 'terminated';
    PTYMessage: {
      /**
       * @description PTYメッセージタイプ
       * @enum {string}
       */
      type:
        | 'process_start'
        | 'process_stop'
        | 'process_output'
        | 'process_input'
        | 'process_error'
        | 'process_status'
        | 'process_resource';
      /** @description プロセス一意識別子 */
      processId: string;
      /**
       * Format: date-time
       * @description メッセージ送信時刻（ISO 8601形式）
       */
      timestamp: string;
      /** @description メッセージペイロード（タイプ別） */
      data?: Record<string, never>;
      /** @description PTYセッション識別子（オプション） */
      sessionId?: string;
    };
    ProcessStartEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_start';
      data?: components['schemas']['ProcessStartData'];
    };
    ProcessStartData: {
      /** @description 実行コマンド */
      command: string;
      /** @description コマンド引数 */
      args: string[];
      /** @description ワーキングディレクトリ */
      workingDirectory?: string;
      /** @description 環境変数 */
      environment?: {
        [key: string]: string;
      };
      /**
       * @description 使用するシェル
       * @default /bin/bash
       */
      shell: string;
      /**
       * @description ターミナル列数
       * @default 80
       */
      cols: number;
      /**
       * @description ターミナル行数
       * @default 24
       */
      rows: number;
      /**
       * @description エンコーディング方式
       * @default utf8
       * @enum {string}
       */
      encoding: 'utf8' | 'ascii';
    };
    ProcessStopEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_stop';
      data?: components['schemas']['ProcessStopData'];
    };
    ProcessStopData: {
      /**
       * @description 停止理由
       * @enum {string}
       */
      reason: 'user_request' | 'signal' | 'timeout' | 'error' | 'normal_exit';
      /** @description 終了コード（正常終了の場合） */
      exitCode?: number;
      /** @description 送信されたシグナル（SIGTERM, SIGKILL等） */
      signal?: string;
      /** @description 停止理由の詳細メッセージ */
      message?: string;
      /**
       * @description グレースフルシャットダウンかどうか
       * @default true
       */
      gracefulShutdown: boolean;
    };
    ProcessOutputEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_output';
      data?: components['schemas']['ProcessOutputData'];
    };
    ProcessOutputData: {
      /**
       * @description 出力ストリーム
       * @enum {string}
       */
      stream: 'stdout' | 'stderr';
      /** @description 出力内容 */
      content: string;
      /**
       * @description エンコーディング方式
       * @default utf8
       * @enum {string}
       */
      encoding: 'utf8' | 'base64';
      /**
       * @description 部分的な出力かどうか
       * @default false
       */
      isPartial: boolean;
      /** @description 行番号（オプション） */
      lineNumber?: number;
    };
    ProcessInputEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_input';
      data?: components['schemas']['ProcessInputData'];
    };
    ProcessInputData: {
      /** @description 入力内容 */
      content: string;
      /**
       * @description エンコーディング方式
       * @default utf8
       * @enum {string}
       */
      encoding: 'utf8' | 'base64';
      /**
       * @description コマンド実行かどうか
       * @default false
       */
      isCommand: boolean;
      /**
       * @description 特殊キー入力（オプション）
       * @enum {string}
       */
      specialKey?: 'enter' | 'tab' | 'ctrl_c' | 'ctrl_d' | 'esc' | 'backspace';
    };
    ProcessErrorEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_error';
      data?: components['schemas']['ProcessErrorData'];
    };
    ProcessErrorData: {
      /**
       * @description エラーコード
       * @enum {string}
       */
      code:
        | 'PROCESS_START_FAILED'
        | 'PROCESS_NOT_FOUND'
        | 'PERMISSION_DENIED'
        | 'INVALID_COMMAND'
        | 'WORKING_DIRECTORY_NOT_FOUND'
        | 'RESOURCE_LIMIT_EXCEEDED'
        | 'PTY_ALLOCATION_FAILED'
        | 'ENCODING_ERROR'
        | 'TIMEOUT_ERROR'
        | 'UNEXPECTED_ERROR';
      /** @description エラーメッセージ（日本語） */
      message: string;
      /** @description エラー詳細情報（オプション） */
      details?: Record<string, never>;
      /**
       * @description エラー重要度
       * @default error
       * @enum {string}
       */
      severity: 'info' | 'warning' | 'error' | 'critical';
      /**
       * @description 回復可能かどうか
       * @default false
       */
      recoverable: boolean;
    };
    ProcessStatusEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_status';
      data?: components['schemas']['ProcessStatusData'];
    };
    ProcessStatusData: {
      state: components['schemas']['ProcessState'];
      /** @description プロセスID */
      pid: number;
      /**
       * Format: date-time
       * @description プロセス開始時刻
       */
      startTime?: string;
      /**
       * Format: date-time
       * @description 最後のアクティビティ時刻
       */
      lastActivity?: string;
      /** @description 親プロセスID（オプション） */
      parentPid?: number;
    };
    ProcessResourceEvent: components['schemas']['PTYMessage'] & {
      /** @enum {string} */
      type?: 'process_resource';
      data?: components['schemas']['ProcessResourceData'];
    };
    ProcessResourceData: {
      /** @description CPU使用率（パーセント） */
      cpuUsage?: number;
      /** @description メモリ使用量（バイト） */
      memoryUsage?: number;
      /** @description メモリ制限（バイト） */
      memoryLimit?: number;
      /** @description 稼働時間（秒） */
      uptime?: number;
      /** @description 開いているファイルディスクリプタ数 */
      fileDescriptors?: number;
    };
    ProcessSession: {
      /** @description セッション一意識別子 */
      sessionId: string;
      /** @description プロセス一意識別子 */
      processId: string;
      state: components['schemas']['ProcessState'];
      /** @description 実行中のコマンド */
      command?: string;
      /** @description ワーキングディレクトリ */
      workingDirectory?: string;
      /**
       * Format: date-time
       * @description セッション作成時刻
       */
      createdAt: string;
      /**
       * Format: date-time
       * @description 最後のアクティビティ時刻
       */
      lastActivity?: string;
      /** @description セッション所有者 */
      owner?: string;
      /** @description セッションタグ（分類用） */
      tags?: string[];
    };
    PTYConfig: {
      /**
       * @description 最大プロセス数
       * @default 10
       */
      maxProcesses: number;
      /**
       * @description デフォルト列数
       * @default 80
       */
      defaultCols: number;
      /**
       * @description デフォルト行数
       * @default 24
       */
      defaultRows: number;
      /**
       * @description プロセスタイムアウト（ミリ秒）
       * @default 300000
       */
      processTimeout: number;
      /**
       * @description 出力バッファサイズ（バイト）
       * @default 1048576
       */
      outputBufferSize: number;
      /**
       * @description リソース監視間隔（ミリ秒）
       * @default 5000
       */
      resourceMonitoringInterval: number;
      /**
       * @description クリーンアップ間隔（ミリ秒）
       * @default 60000
       */
      cleanupInterval: number;
      /**
       * @description デフォルトエンコーディング
       * @default utf8
       * @enum {string}
       */
      encoding: 'utf8' | 'ascii';
    };
    PTYManagerState: {
      /**
       * @description PTYマネージャーの状態
       * @enum {string}
       */
      status: 'initializing' | 'running' | 'stopping' | 'stopped' | 'error';
      /** @description アクティブなプロセス数 */
      activeProcesses: number;
      /** @description 総プロセス数 */
      totalProcesses: number;
      /** @description 最大プロセス数 */
      maxProcesses?: number;
      /** @description 稼働時間（秒） */
      uptime?: number;
      /**
       * Format: date-time
       * @description 最後のクリーンアップ時刻
       */
      lastCleanup?: string;
      /** @description システムリソース使用状況 */
      systemResources?: components['schemas']['ProcessResourceData'];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
